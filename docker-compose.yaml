services:
  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    ports:
      - "3001:8080"
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  keycloak-api-server:
    build:
      context: ./keycloak-api
    ports:
      - 4000:4000
    environment:
      - FLASK_ENV=development
      - SQLALCHEMY_DATABASE_URI=sqlite:////tmp/test.db
      - KEYCLOAK_SERVER_URL=${KEYCLOAK_SERVER_URL}
      - KEYCLOAK_REALM_NAME=${KEYCLOAK_REALM_NAME}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
    depends_on:
      keycloak:
        condition: service_started
    restart: on-failure

  # keycloak-web-app:
  #   build:
  #     context: ./keycloak-web
  #   ports:
  #     - 3000:3000

  postgres-auth:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "${POSTGRES_USER:-keycloak}"']
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASS}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-auth/${POSTGRESQL_DB}
      KC_DB_USERNAME: ${POSTGRESQL_USER}
      KC_DB_PASSWORD: ${POSTGRESQL_PASS}
    ports:
      - 8080:8080
    depends_on:
      postgres-auth: 
        condition: service_healthy
    command:
      - start-dev

volumes:
  postgres_auth_data:
